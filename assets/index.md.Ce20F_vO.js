import{_ as a,c as e,o,a4 as t}from"./chunks/framework.DUCr4ECn.js";const p=JSON.parse('{"title":"简介","description":"","frontmatter":{"layout":"home","hero":{"name":"Lagrange.Doc","tagline":"Lagrange 使用手册","actions":[{"text":"使用 Lagrange.Core","link":"./Lagrange.Core/index"},{"text":"使用 Lagrange.OneBot","link":"./Lagrange.OneBot/index"},{"text":"使用LagrangeGo","link":"./LagrangeGo/index"}]}},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":1728189779000}'),n={name:"index.md"},r=t('<h1 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h1><p>Lagrange.Core 是一个开源的 NTQQ 协议实现, 当前处于稳定期, 免责声明详见项目主页</p><p>目前推荐使用 Linux 协议登录</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><h3 id="已经是一名熟练的-c-dev-了" tabindex="-1">&quot;已经是一名熟练的 C# Dev 了?&quot; <a class="header-anchor" href="#已经是一名熟练的-c-dev-了" aria-label="Permalink to &quot;&quot;已经是一名熟练的 C# Dev 了?&quot;&quot;">​</a></h3><p>前往 <a href="./Lagrange.Core/">Lagrange.Core</a> 查看 API 文档</p><h3 id="希望对接其他-bot-框架-nonebot2-koishi" tabindex="-1">&quot;希望对接其他 Bot 框架 (NoneBot2, Koishi ...)&quot; <a class="header-anchor" href="#希望对接其他-bot-框架-nonebot2-koishi" aria-label="Permalink to &quot;&quot;希望对接其他 Bot 框架 (NoneBot2, Koishi ...)&quot;&quot;">​</a></h3><p>前往 <a href="./Lagrange.OneBot/">Lagrange.OneBot</a> 查看如何配置 <code>Lagrange.OneBot</code></p><h3 id="喜欢更简易轻量的golang" tabindex="-1">&quot;喜欢更简易轻量的golang？&quot; <a class="header-anchor" href="#喜欢更简易轻量的golang" aria-label="Permalink to &quot;&quot;喜欢更简易轻量的golang？&quot;&quot;">​</a></h3><p>前往 <a href="./LagrangeGo/">LagrangeGo</a></p>',10),i=[r];function g(d,h,l,s,c,u){return o(),e("div",null,i)}const q=a(n,[["render",g]]);export{p as __pageData,q as default};
