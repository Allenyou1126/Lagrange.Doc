import{_ as e,o as a,c as t,R as r}from"./chunks/framework.n93kXFqc.js";const m=JSON.parse('{"title":"Lagrange.OneBot","description":"","frontmatter":{},"headers":[],"relativePath":"Lagrange.OneBot/index.md","filePath":"Lagrange.OneBot/index.md"}'),o={name:"Lagrange.OneBot/index.md"},n=r('<h1 id="lagrange-onebot" tabindex="-1">Lagrange.OneBot <a class="header-anchor" href="#lagrange-onebot" aria-label="Permalink to &quot;Lagrange.OneBot&quot;">​</a></h1><p>Lagrange.Core实现了OneBot V11的通信协议，可以和主流Bot框架进行通信</p><ol><li><a href="https://github.com/LagrangeDev/Lagrange.Core/releases/tag/nightly" target="_blank" rel="noreferrer">nightly</a> 通过Nightly Release获取最新的Self-Contained .NET8程序包</li><li><a href="https://github.com/LagrangeDev/Lagrange.Core/pkgs/container/lagrange.onebot" target="_blank" rel="noreferrer">Docker</a> 通过ghcr.io的Docker部署（CI自动打包，可以获取每一个Commit的更新内容）</li><li><a href="https://github.com/LagrangeDev/Lagrange.Core/actions" target="_blank" rel="noreferrer">Actions</a> 通过Docker获取Framework-Dependent .NET7/8程序包</li></ol><div class="tip custom-block"><p class="custom-block-title">提示</p><p>Actions内的工件为Framework-Dependent打包模式 请前往<a href="https://dotnet.microsoft.com/zh-cn/download" target="_blank" rel="noreferrer">Microsoft</a>获取.NET Runtime 以运行</p></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>NTQQ的SignServer不可与Android协议混用(如unidbg-fetch-qsign)</p><p>本项目不主动提供SignServer 请前往README.md加入Telegram群聊以获取有效信息</p></div>',5),i=[n];function g(l,c,s,d,p,_){return a(),t("div",null,i)}const f=e(o,[["render",g]]);export{m as __pageData,f as default};
