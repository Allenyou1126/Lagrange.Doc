import{_ as t,o as e,c as s,R as n}from"./chunks/framework.n93kXFqc.js";const h=JSON.parse('{"title":"创建Bot实例","description":"","frontmatter":{},"headers":[],"relativePath":"Lagrange.Core/Start/CreateBot.md","filePath":"Lagrange.Core/Start/CreateBot.md"}'),a={name:"Lagrange.Core/Start/CreateBot.md"},l=n(`<h1 id="创建bot实例" tabindex="-1">创建Bot实例 <a class="header-anchor" href="#创建bot实例" aria-label="Permalink to &quot;创建Bot实例&quot;">​</a></h1><h2 id="botcontext-上下文类" tabindex="-1">BotContext 上下文类 <a class="header-anchor" href="#botcontext-上下文类" aria-label="Permalink to &quot;BotContext 上下文类&quot;">​</a></h2><p>BotContext是Lagrange.Core的核心实例,Event,Logger,Send等操作都需要由该实例完成</p><table><thead><tr><th style="text-align:center;">字段</th><th style="text-align:center;">类型</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">Invoker</td><td style="text-align:center;">EventInvoker</td><td style="text-align:center;">所有Event的集合,用于订阅并处理消息</td></tr><tr><td style="text-align:center;">BotUin</td><td style="text-align:center;">uint</td><td style="text-align:center;">登陆的账号</td></tr><tr><td style="text-align:center;">BotName</td><td style="text-align:center;">string</td><td style="text-align:center;">登陆账号的昵称</td></tr></tbody></table><p>BotContext的构造需要由BotFactory工厂类创建,其本身的构造函数私有化</p><p>BotFactory需要BotConfig,DeviceInfo,KeyStore作为参数,返回BotContext实例</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bot</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> BotFactory.</span><span style="color:#B392F0;">Create</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BotConfig</span><span style="color:#E1E4E8;">(), _deviceInfo, _keyStore);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bot</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> BotFactory.</span><span style="color:#6F42C1;">Create</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BotConfig</span><span style="color:#24292E;">(), _deviceInfo, _keyStore);</span></span></code></pre></div><h2 id="botconfig-配置类" tabindex="-1">BotConfig 配置类 <a class="header-anchor" href="#botconfig-配置类" aria-label="Permalink to &quot;BotConfig 配置类&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">字段</th><th style="text-align:center;">类型</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">Protocol</td><td style="text-align:center;">Protocols</td><td style="text-align:center;">协议平台,默认为Linux</td></tr><tr><td style="text-align:center;">AutoReconnect</td><td style="text-align:center;">bool</td><td style="text-align:center;">自动重连,默认为true</td></tr><tr><td style="text-align:center;">UseIPv6Network</td><td style="text-align:center;">bool</td><td style="text-align:center;">是否使用IPV6,默认为false</td></tr><tr><td style="text-align:center;">GetOptimumServer</td><td style="text-align:center;">bool</td><td style="text-align:center;">自动使用链接状态最优的服务器,默认为true</td></tr><tr><td style="text-align:center;">CustomSignProvider</td><td style="text-align:center;">SignProvider?</td><td style="text-align:center;">自定义签名服务器,无签名可能导致无法登陆</td></tr></tbody></table><h2 id="botdeviceinfo-设备信息类" tabindex="-1">BotDeviceInfo 设备信息类 <a class="header-anchor" href="#botdeviceinfo-设备信息类" aria-label="Permalink to &quot;BotDeviceInfo 设备信息类&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">字段</th><th style="text-align:center;">类型</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">Guid</td><td style="text-align:center;">Guid</td><td style="text-align:center;">全局唯一标识符,可为任意</td></tr><tr><td style="text-align:center;">MacAddress</td><td style="text-align:center;">byte[]</td><td style="text-align:center;">设备MAC地址,6位长byte[]</td></tr><tr><td style="text-align:center;">DeviceName</td><td style="text-align:center;">string</td><td style="text-align:center;">设备名称,可为任意</td></tr><tr><td style="text-align:center;">SystemKernel</td><td style="text-align:center;">string</td><td style="text-align:center;">系统内核,固定为Windows 10.0.19042,可能会随着默认构造方法修改</td></tr><tr><td style="text-align:center;">KernelVersion</td><td style="text-align:center;">string</td><td style="text-align:center;">内核版本号,同系统内核</td></tr></tbody></table><p>手动创建示例:</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BotDeviceInfo</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">_deviceInfo</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    Guid </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Guid.</span><span style="color:#B392F0;">NewGuid</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">    MacAddress </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GenRandomBytes</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    DeviceName </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">$&quot;Lagrange-52D02F&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    SystemKernel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Windows 10.0.19042&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    KernelVersion </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;10.0.19042.0&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#6A737D;">//手动创建设备信息</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BotDeviceInfo</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">_deviceInfo</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    Guid </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Guid.</span><span style="color:#6F42C1;">NewGuid</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">    MacAddress </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GenRandomBytes</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    DeviceName </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">$&quot;Lagrange-52D02F&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    SystemKernel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Windows 10.0.19042&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    KernelVersion </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;10.0.19042.0&quot;</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#6A737D;">//手动创建设备信息</span></span></code></pre></div><h2 id="botkeystore-密钥存储类" tabindex="-1">BotKeyStore 密钥存储类 <a class="header-anchor" href="#botkeystore-密钥存储类" aria-label="Permalink to &quot;BotKeyStore 密钥存储类&quot;">​</a></h2><p>由序列化现有KeyStore创建,或由初始构造方法自动创建,登陆成功后可使用</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">_keyStore </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> bot.</span><span style="color:#B392F0;">UpdateKeystore</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">_keyStore </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> bot.</span><span style="color:#6F42C1;">UpdateKeystore</span><span style="color:#24292E;">();</span></span></code></pre></div><p>更新获取KeyStore序列化至本地存储,方便下次快速登陆</p>`,17),o=[l];function p(r,c,y,i,d,E){return e(),s("div",null,o)}const x=t(a,[["render",p]]);export{h as __pageData,x as default};
