import{_ as s,o as a,c as e,R as n}from"./chunks/framework.n93kXFqc.js";const h=JSON.parse('{"title":"发送消息","description":"","frontmatter":{},"headers":[],"relativePath":"Lagrange.Core/Send/SendMessage.md","filePath":"Lagrange.Core/Send/SendMessage.md"}'),o={name:"Lagrange.Core/Send/SendMessage.md"},p=n(`<h1 id="发送消息" tabindex="-1">发送消息 <a class="header-anchor" href="#发送消息" aria-label="Permalink to &quot;发送消息&quot;">​</a></h1><p>方法:SendMessage(_messageChain)</p><p>参数:MessageChain <a href="/Lagrange.Doc/Lagrange.Core/MessageChain/MessageBuilder.html">构建消息导航</a></p><p>返回:MessageResult <a href="/Lagrange.Doc/Lagrange.Core/Send/MessageResult.html">消息结果导航</a></p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">messageChain</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">//假设之前已经构建好了消息链</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> bot.</span><span style="color:#B392F0;">SendMessage</span><span style="color:#E1E4E8;">(messageChain.</span><span style="color:#B392F0;">Build</span><span style="color:#E1E4E8;">());</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">messageChain</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">//假设之前已经构建好了消息链</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> bot.</span><span style="color:#6F42C1;">SendMessage</span><span style="color:#24292E;">(messageChain.</span><span style="color:#6F42C1;">Build</span><span style="color:#24292E;">());</span></span></code></pre></div><p>补充:发送消息成功后,对应的XXXMessageEvent会被自己的消息触发,可用于监听消息发送的状态</p>`,6),l=[p];function t(r,c,i,d,g,y){return a(),e("div",null,l)}const _=s(o,[["render",t]]);export{h as __pageData,_ as default};
