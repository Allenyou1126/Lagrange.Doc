import{_ as a,o as t,c as e,R as s}from"./chunks/framework.n93kXFqc.js";const E=JSON.parse('{"title":"扫码登陆","description":"","frontmatter":{},"headers":[],"relativePath":"Login/LoginByScanQrCode.md","filePath":"Login/LoginByScanQrCode.md"}'),o={name:"Login/LoginByScanQrCode.md"},n=s('<h1 id="扫码登陆" tabindex="-1">扫码登陆 <a class="header-anchor" href="#扫码登陆" aria-label="Permalink to &quot;扫码登陆&quot;">​</a></h1><p>本节将介绍如何扫码登陆</p><p>扫码登陆是目前初次登陆所必须的登陆方式,初次登陆使用密码登陆有较大概率无法登陆</p><h2 id="qrcode-二维码" tabindex="-1">QrCode 二维码 <a class="header-anchor" href="#qrcode-二维码" aria-label="Permalink to &quot;QrCode 二维码&quot;">​</a></h2><p>首先,你需要使用FetchQrCode()异步方法,这将返回一个元组</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">qrCode</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> bot.</span><span style="color:#B392F0;">FetchQrCode</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">qrCode</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> bot.</span><span style="color:#6F42C1;">FetchQrCode</span><span style="color:#24292E;">();</span></span></code></pre></div><p>返回的元组包含以下元素:</p><table><thead><tr><th style="text-align:center;">字段</th><th style="text-align:center;">类型</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">Url</td><td style="text-align:center;">string</td><td style="text-align:center;">二维码链接</td></tr><tr><td style="text-align:center;">QrCode</td><td style="text-align:center;">byte[]</td><td style="text-align:center;">二维码byte[]</td></tr></tbody></table><p>可以直接访问Url扫码,也可以将二维码的byte[]保存为本地png文件扫码</p><h2 id="等待登陆" tabindex="-1">等待登陆 <a class="header-anchor" href="#等待登陆" aria-label="Permalink to &quot;等待登陆&quot;">​</a></h2><p>在获取完二维码后,等待异步方法LoginByQrCode(),该方法会等待用户扫码并在扫码完毕后返回</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> bot.</span><span style="color:#B392F0;">LoginByQrCode</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> bot.</span><span style="color:#6F42C1;">LoginByQrCode</span><span style="color:#24292E;">();</span></span></code></pre></div>',12),l=[n];function p(r,c,d,i,y,h){return t(),e("div",null,l)}const _=a(o,[["render",p]]);export{E as __pageData,_ as default};
