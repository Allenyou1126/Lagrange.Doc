import{_ as e,o as a,c as r,R as t}from"./chunks/framework.n93kXFqc.js";const m=JSON.parse('{"title":"简介","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),o={name:"index.md"},n=t('<h1 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h1><p>Lagrange.Core是一个开源的NTQQ Protocol实现,当前处于开发中,免责声明详见项目主页</p><h1 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h1><p>&quot;已经是一名熟练的C# Dev了?查看下面的示例也许能帮你快速上手,使用Lagrange.Core原生开发你的程序&quot;</p><ol><li><a href="https://github.com/LagrangeDev/Lagrange.Core/tree/master/Lagrange.Core.Test" target="_blank" rel="noreferrer">Lagrange.Core.Test</a> 内涵简单的登陆和测试案例</li><li><a href="https://github.com/LagrangeDev/Lagrange.Core/tree/master/Lagrange.OneBot" target="_blank" rel="noreferrer">Lagrange.Onebot</a> 详细的基于Lagrange.Core的Onebot实现</li></ol>',5),i=[n];function s(_,l,g,c,d,h){return a(),r("div",null,i)}const f=e(o,[["render",s]]);export{m as __pageData,f as default};
